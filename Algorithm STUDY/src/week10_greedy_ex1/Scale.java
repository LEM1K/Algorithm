package week10_greedy_ex1;

import java.util.*;

/*백준 2437 - 저울
 *version 1
 */

public class Scale {
	/*
	 문제 접근
	 
	 ex) 추의 개수가 5개이고 각 추의 무게가 1, 1, 2, 4, 10일때
	  재야하는 무게 1은 추 1짜리 한개를 써서 잴 수 있음.
	 2는 추 2짜리 한개를 써서 잴 수 있음. 
	 3은 추 1, 2 짜리 각 두개를 써서 잴 수 있음
	 4는 추 1, 1, 2짜리 세개를 써서 잴 수 있음.
	 5는 추 1, 4짜리 두개를 써서 잴 수 있음.
	 6은 추 2, 4짜리 두개를 써서 잴 수 있음.
	 7은 추 1, 2, 4 짜리 세개를 써서 잴 수 있음.
	 8은 추 1, 1, 2, 4짜리 네개를 써서 잴 수 있음.
	 9는 추 1, 1, 2, 4이외의 추를 하나 더 추가해서 재야하나(혹은, 남아있는 추로 무게를 재야한다.) 남은 추의 무게는 10.
	  따라서 추가 잴 수 없는 최소 무게는 9.
	  
	  이에  첫 번째, 무게 10 전까지의 추 합이 8이므로 8이하의 무게는 잴 수 있다는 것을 확인.
	  두 번째, 기존에 더한 추의 합(8)이 다음에 써야하는 추(10)보다 작으면 그 합의 다음 값(9)이 잴 수 없는 최소 무게가 됨.
	  
	  결론 1. 추의 무게는 최소 1 이고 추의 개수는 최소 1개. 따라서 가장 최소로 잴수 있는 무게는 1
	  결론 2. 기존에 더했던 추의 합이 다음 추의 무게보다 크거나 같으면 추의 합 이하의 무게는 모두 잴 수 있음.
	  결론 3. 기존에 더했던 추의 합이 다음 추의 무게보다 작으면 합의 그 다음 값이 잴 수 없는 최소 무게가 됨.
	 * 
	 * */
	private static int arr[];
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner input = new Scanner(System.in);
		
		int n = input.nextInt();
		arr = new int[n];
		
		for(int i = 0; i < n; i++) {
			int tmp = input.nextInt();
			arr[i] = tmp;
		}
		
		Arrays.sort(arr);
		//최소 추의 합을 순차적으로 더하기 위해 오름차순 정렬
		
		int min = 1;
		//결론 1에 해당.
		
		for(int i = 0; i < n; i++) {	
			if(arr[i] > min) {
				break;
				//결론 3에 해당.
			}	
			min += arr[i];
			//해당 코드를 조건문 이전에 실행하면 현재값까지 더하고 조건을 수행하므로 조건을 미리 주고 합을 수행.
			//결론 2에 해당.
		}
		
		System.out.println(min);
	}

}
